diff -up Crypt-OpenSSL-RSA-0.31/RSA.pm.omv~ Crypt-OpenSSL-RSA-0.31/RSA.pm
--- Crypt-OpenSSL-RSA-0.31/RSA.pm.omv~	2021-07-15 15:11:31.963353297 +0200
+++ Crypt-OpenSSL-RSA-0.31/RSA.pm	2021-07-15 15:11:39.140531593 +0200
@@ -34,7 +34,6 @@ Crypt::OpenSSL::RSA - RSA encoding and d
   Crypt::OpenSSL::Random::random_seed($good_entropy);
   Crypt::OpenSSL::RSA->import_random_seed();
   $rsa_pub = Crypt::OpenSSL::RSA->new_public_key($key_string);
-  $rsa_pub->use_sslv23_padding(); # use_pkcs1_oaep_padding is the default
   $ciphertext = $rsa->encrypt($plaintext);
 
   $rsa_priv = Crypt::OpenSSL::RSA->new_private_key($key_string);
@@ -220,11 +219,6 @@ an empty encoding parameter. This mode o
 all new applications.  It is the default mode used by
 C<Crypt::OpenSSL::RSA>.
 
-=item use_sslv23_padding
-
-Use C<PKCS #1 v1.5> padding with an SSL-specific modification that
-denotes that the server is SSL3 capable.
-
 =item use_md5_hash
 
 Use the RFC 1321 MD5 hashing algorithm by Ron Rivest when signing and
@@ -267,7 +261,7 @@ the text to be encrypted should be:
 
 at most 42 bytes less than this size.
 
-=item pkcs1_padding or sslv23_padding
+=item pkcs1_padding
 
 at most 11 bytes less than this size.
 
diff -up Crypt-OpenSSL-RSA-0.31/RSA.xs.omv~ Crypt-OpenSSL-RSA-0.31/RSA.xs
--- Crypt-OpenSSL-RSA-0.31/RSA.xs.omv~	2021-07-15 15:06:34.843472592 +0200
+++ Crypt-OpenSSL-RSA-0.31/RSA.xs	2021-07-15 15:10:05.498118789 +0200
@@ -640,12 +640,6 @@ use_pkcs1_oaep_padding(p_rsa)
   CODE:
     p_rsa->padding = RSA_PKCS1_OAEP_PADDING;
 
-void
-use_sslv23_padding(p_rsa)
-    rsaData* p_rsa;
-  CODE:
-    p_rsa->padding = RSA_SSLV23_PADDING;
-
 # Sign text. Returns the signature.
 
 SV*
